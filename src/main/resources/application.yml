spring:
  application:
    name: rabbit-mq #service name, this will appear in eureka server homepage
  profiles:
    active: dev,local
#  config:
#    import: optional:configserver:http://localhost:8888
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

server:
  port: 8095 #port where this microservice is going to register.

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka} #http://localhost:8761/eureka #eureka endpoint
#    instance:
#      preferIpAddress: true
#      hostname: localhost
#    healthcheck:
#      enabled: true
#    lease:
#      duration: 5


spring.cloud.stream:
  bindings:
    #Sink properties -
    employee-receiver-channel:
      destination: employee-registration-channel
      group: employee-stream-group #this is the queue name will always communicate with exchange.

    #Source properties - This will push message into queue, if exchange is not available it will create.
    employee-registration-channel:
      destination: employee-registration-channel
      content-type: application/json